// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using consultorio_seguros_api.Contexto;

#nullable disable

namespace consultorio_seguros_api.Migrations
{
    [DbContext(typeof(svrlogsContext))]
    partial class svrlogsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("consultorio_seguros_api.Entidad.Asegurado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Edad")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("Fecha")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Asegurado");
                });

            modelBuilder.Entity("consultorio_seguros_api.Entidad.Seguro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("Fecha")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal?>("Prima")
                        .IsRequired()
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("SumaAsegurada")
                        .IsRequired()
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.ToTable("Seguro");
                });

            modelBuilder.Entity("consultorio_seguros_api.Entidad.SeguroAsegurado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AseguradoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("Fecha")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("SeguroId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AseguradoId");

                    b.HasIndex("SeguroId");

                    b.ToTable("SeguroAsegurado");
                });

            modelBuilder.Entity("consultorio_seguros_api.Entidad.SeguroAsegurado", b =>
                {
                    b.HasOne("consultorio_seguros_api.Entidad.Asegurado", "Asegurado")
                        .WithMany()
                        .HasForeignKey("AseguradoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("consultorio_seguros_api.Entidad.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("SeguroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asegurado");

                    b.Navigation("Seguro");
                });
#pragma warning restore 612, 618
        }
    }
}
